{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"practica2-5/","text":"Natividad M\u00e1rquez Baena Practica 2.5 - Proxy inverso y balanceo de carga con SSL en NGINX 1.INTRODUCCI\u00d3N 2.TAREA 3.COMPROBACIONES 1.INTRODUCCI\u00d3N En la pr\u00e1ctica anterior se configurar\u00f3 un proxy inverso con balanceo de carga entre dos servidores web Nginx. En esta se implementar\u00e1 la configuraci\u00f3n de SSL para el cifrado HTTPS. El proxy inverso act\u00faa como intermediario entre los clientes y los servidores, ofreciendo la ventaja de realizar el cifrado y descifrado de SSL, lo que reduce la carga en los servidores web. Se generar\u00e1 un certificado autofirmado mediante la herramienta OpenSSL, simulando el entorno seguro. 2.TAREA 2.1 Crear un Certificado Autofirmado Se crea un directorio para el certificado llamado ssl en la ruta /etc/nginx/ . Se genera el certificado y la clave privada con OpenSSL mediante el siguiente comando (valido por un a\u00f1o): Descripci\u00f3n de los par\u00e1metros: x509: Crea un certificado autofirmado. nodes: No solicita contrase\u00f1a, permitiendo el acceso directo del servidor. days 365: Validez del certificado en d\u00edas. newkey rsa:2048: Genera una nueva clave RSA de 2048 bits. keyout y -out Define la ruta de salida para la clave y el certificado, respectivamente Se rellenar\u00e1 la informaci\u00f3n que solicita el certificado durante el proceso. 2.2 Configuraci\u00f3n SSL en el Proxy Inverso Primero se edita el archivo de configuraci\u00f3n del proxy en el directorio /etc/nginx/sites-available : Aqu\u00ed se modifica el bloque server para habilitar el https. Se cambia la configuraci\u00f3n para que el proxy escuche en el puerto 443 (HTTPS) y use el certificado y la clave creados. listen 443 ssl; : Configura el servidor para escuchar en el puerto 443, activando SSL. ssl_certificate y ssl_certificate_key: Ubicaci\u00f3n del certificado y la clave privados generados. ssl_protocols y ssl_ciphers: Establecen protocolos y algoritmos de cifrado seguros. access_log: Especifica el nombre y ubicaci\u00f3n del archivo de logs para HTTPS. Una vez hecho se realiza un test para comprobar que el archivo se ha modificado correctamente y la sintaxis es v\u00e1lida. Adem\u00e1s se reinicia el servicio nginx para aplicar los cambios al archivo de configuraci\u00f3n. 3.COMPROBACIONES 3.1 Acceder al sitio mediante HTTPS Se accede al sitio web y deber\u00eda aparecer una advertencia de seguridad, ya que se trata de un certificado autofirmado. A continuaci\u00f3n se revisa el certificado y los datos 3.2 Forzar la Redirecci\u00f3n de HTTP a HTTPS Se a\u00f1ade un bloque server adicional para redirigir HTTP a HTTPS. Para ello se modifica el archivo anterior y se a\u00f1ade el siguiente bloque: Como en anteriores pasos, se comprueban que los cambios son correctos y se reinicia el servicio nginx. Finalmente, al redirigirnos a la misma p\u00e1gina, deber\u00eda redirigirse autom\u00e1ticamente a la versi\u00f3n segura https.","title":"Practica2 5"},{"location":"practica2-5/#practica-25-proxy-inverso-y-balanceo-de-carga-con-ssl-en-nginx","text":"1.INTRODUCCI\u00d3N 2.TAREA 3.COMPROBACIONES","title":"Practica 2.5 - Proxy inverso y balanceo de carga con SSL en NGINX"},{"location":"practica2-5/#1introduccion","text":"En la pr\u00e1ctica anterior se configurar\u00f3 un proxy inverso con balanceo de carga entre dos servidores web Nginx. En esta se implementar\u00e1 la configuraci\u00f3n de SSL para el cifrado HTTPS. El proxy inverso act\u00faa como intermediario entre los clientes y los servidores, ofreciendo la ventaja de realizar el cifrado y descifrado de SSL, lo que reduce la carga en los servidores web. Se generar\u00e1 un certificado autofirmado mediante la herramienta OpenSSL, simulando el entorno seguro.","title":"1.INTRODUCCI\u00d3N"},{"location":"practica2-5/#2tarea","text":"","title":"2.TAREA"},{"location":"practica2-5/#21-crear-un-certificado-autofirmado","text":"Se crea un directorio para el certificado llamado ssl en la ruta /etc/nginx/ . Se genera el certificado y la clave privada con OpenSSL mediante el siguiente comando (valido por un a\u00f1o): Descripci\u00f3n de los par\u00e1metros: x509: Crea un certificado autofirmado. nodes: No solicita contrase\u00f1a, permitiendo el acceso directo del servidor. days 365: Validez del certificado en d\u00edas. newkey rsa:2048: Genera una nueva clave RSA de 2048 bits. keyout y -out Define la ruta de salida para la clave y el certificado, respectivamente Se rellenar\u00e1 la informaci\u00f3n que solicita el certificado durante el proceso.","title":"2.1 Crear un Certificado Autofirmado"},{"location":"practica2-5/#22-configuracion-ssl-en-el-proxy-inverso","text":"Primero se edita el archivo de configuraci\u00f3n del proxy en el directorio /etc/nginx/sites-available : Aqu\u00ed se modifica el bloque server para habilitar el https. Se cambia la configuraci\u00f3n para que el proxy escuche en el puerto 443 (HTTPS) y use el certificado y la clave creados. listen 443 ssl; : Configura el servidor para escuchar en el puerto 443, activando SSL. ssl_certificate y ssl_certificate_key: Ubicaci\u00f3n del certificado y la clave privados generados. ssl_protocols y ssl_ciphers: Establecen protocolos y algoritmos de cifrado seguros. access_log: Especifica el nombre y ubicaci\u00f3n del archivo de logs para HTTPS. Una vez hecho se realiza un test para comprobar que el archivo se ha modificado correctamente y la sintaxis es v\u00e1lida. Adem\u00e1s se reinicia el servicio nginx para aplicar los cambios al archivo de configuraci\u00f3n.","title":"2.2 Configuraci\u00f3n SSL en el Proxy Inverso"},{"location":"practica2-5/#3comprobaciones","text":"","title":"3.COMPROBACIONES"},{"location":"practica2-5/#31-acceder-al-sitio-mediante-https","text":"Se accede al sitio web y deber\u00eda aparecer una advertencia de seguridad, ya que se trata de un certificado autofirmado. A continuaci\u00f3n se revisa el certificado y los datos","title":"3.1 Acceder al sitio mediante HTTPS"},{"location":"practica2-5/#32-forzar-la-redireccion-de-http-a-https","text":"Se a\u00f1ade un bloque server adicional para redirigir HTTP a HTTPS. Para ello se modifica el archivo anterior y se a\u00f1ade el siguiente bloque: Como en anteriores pasos, se comprueban que los cambios son correctos y se reinicia el servicio nginx. Finalmente, al redirigirnos a la misma p\u00e1gina, deber\u00eda redirigirse autom\u00e1ticamente a la versi\u00f3n segura https.","title":"3.2 Forzar la Redirecci\u00f3n de HTTP a HTTPS"}]}